Échange de clé de Diffie-Hellmann :

'''
keyLength est la longueur des exposants
'''
keyLength = 224

'''
p est un nombre premier de taille 2048 bits !
'''

'''
Prime p
'''
p=25356392195411313219498511820735441225803750303691592077633231815789885449579008779786711696479966325832688394774851315344215091430788717344437729057196622731849620236437880633724538021589547497731606377007685193434567858331647748479796207975018580802074752547522610183090197238773148193960492280053870056664777324622858067280369965296530421235193694273470752739164863720971528987569906230445718793383137808468916674411922390926811276020462546047564845912405736065252513538659789339861888900274865274143589110522009921164559270597728881817093680508425428203131326334437409649157018632113218394709540860893980151105643
p=0xc8dc7f45e55713c6e9e8026acbc70a46d36657c7a962484a7e195399a75b95cb02b6cc9d2d99689a90753c39a98955ffbf218fdbbe85d3dbc5ca571219263bfb70a42d1bb3847692ddaca97032145be535664f7432a20e7df738379024d9a5309059526a6ea2a952c24cf0e97944f547a8fcdfb4cce122f9113575a55f6e24cc126360b49be1e03021a810bb82febc2da7fdcac05db2b5f961dd1f0d1b4d2ecdbf7b8c2c30197678bd14d2daf6e81944b6c7ab89c6e417433d658178cb1d84bbefc03b1c2c5ec76d2f815489d738dfc4c071994fdebf15b787c0b8de1f02d91bffcf2e1f4051e9e8008bf57bb976a45823044ef7d3bdac70489d68c7c63dc86b
'''
Generator of subgroup of order prime q
'''
q=31778008515876996127318446629792964599858422452431496264051867516997
q=0x12dc00f3fdaabb7fa63b93c706c4e38710328e1b3f52335f738380045
g=6086978181618526785750499324776941296101117760820168160127695452947159600999195065607894078870636405441831257557208437653962630314217644750712549017482456276243522745866402051877926856430985874206497392240869892828471953622289703080989344548563515394350819920462479198936931987951499766268134060890465977092845411743279634245837737977037779606555212189129682586459616088813110237601938117277545187839057069278920653152750351349428928259240613513970832262821762708643097861112318632091634218331848430122473433359758849770852286541536486314511985361184376650841722805286614707001196944111718506691906603593543010028221
g=0x3037d904fd31118b3dca318822c03fa7ae7ed7537f93cf89056c6d02ea6e29ee84855b2851d49a4ed30fd39ac39ffaf2f79be246164558ba08956aa3d2fbc353b1c44c6c02a8df85fe10eda3bfcd998d1107b2fcd75315c66add926d6815cb2927698c468aa802436a2d57351eb126607b192edaebb566d849d61471ae9d996849e46311f72c693fc65a9e87891df17047ce44c4126a0b51fd39e420e0ce2083db65bd201753e97d8ec2a21e6920fe8f812b22d589b0aa2eec173d23e0dfb9a25324f269fc3d0c72907990435449e3e3d02daebff55992021dc14d24bf16d06b7ee164c58ce0520f5deeda9557ac98dbe03c53d86e2c54d179002abc1b9d0abd

'''
kpub_bob = g^k_bob mod p est la valeur reçue de Bob par Alice, e est l'exposant secret d'Alice

=> kpub_bob^k_alice mod p est donc la clé secrète partagée par Bob et Alice (Diffie Hellmann)
'''
kpub_bob=25229393041756100036860786755813932804830924692899744914096524396691420841253089316539016440988158248692730588284042817577858764443475154263060892804777506726886467306571544160230577500012047687814448393881179411312611656684855851351949715078202683472395317759250253273578499388433571972919744083186577780167150852066535577379727857259753503324237484185355032294307291800773575380741936139618664336691375434283376901581841878967095954145236266524126674413040195418106333198228533808552021989312417381099395489878517575313834247123564366249526398396310579644790629976312513389152082955913761301453265897378227466058380
kpub_bob=0xc7daf4483ac19f73e6bba65ebda54457fc1d3ab7ce8e32300d721ecd9c2d0a92abdbb4337de55bf6ecc91d513292eec05b56afabd9a38b7bb6546d324d0971da5968e8c48b0dd9b1259d72d7d71ab17f1bbf3170fa7ba35338681b858570edb5086ae463bbb455ebf855720700c1461cddb1bd48ad3219ff9a3b5bde5e19a5c4b1e2a56ea1bf6f30808f6523550c9f35a96b96401c2aff984ae8d9a36df37ab783078d3e06be2b6829b64a8fa517a66dbbcd741b7a24f76af5c88742b3834fdf2e100fdba664d75080c9551fbfe92d22366324d7e4be737dd977f3f50592ecb56639219eafda42a2317bfeb8e4c68e8cdbd49ab58f8e5159c90f6a29b9ecba8c

'''
Algorithme de calcul : Right-to-Left-Square-and-Multiply

complexité : t carrés et en moyenne t/2 multiplications (si t est la taille de l'exposant)
'''

'''
Ratio carré/multiplication : 9/11
'''

'''
Protocole de chiffrement utilisé par Alice pour son message :

La clé échangée est stockée dans un fichier (SecretKey.dat) :
'''

c1 = squareAndMultiply(g,k,p, keyLength)
c1 = c1%(2**256)
print('key = c1 =',hex(c1))

f = open('SecretKey.dat','w')
f.write(str(hex(c1)))
f.close()

'''
La commande de chiffrement utilisée par Alice est la suivante :

openssl aes-256-cbc -e -in output.txt -out output.cph -pbkdf2 -pass file:SecretKey.dat
'''

