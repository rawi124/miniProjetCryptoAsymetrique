Échange de clé de Diffie-Hellmann :

'''
keyLength est la longueur des exposants
'''
keyLength = 224

'''
p est un nombre premier de taille 2048 bits !
'''

'''
Prime p
'''
p=30439657575192640416070549999777755001951984383219743796284524147063308415955855200018957447951403929060583828720442061624275518093893411565586711720495843679427506075750697308664322126963999279503647492334499719528248131279625229968716700261742879659626088641548601224398707678789707756405536857006793347894783071200639373203013572087791318782870306189667186673439138244835472793228496784368669621004906814286187725609797923039186141231902738856762171092899784573546517017648456899322370971605035330185021698761905874966003817262951258280982674348672718979969559186810907232081589001943120570971755219693698456770437
p=0xf120e7b07cef9e6a65fd5e9727989da801fa73150a6e6c9cc0d33ba128502c86a21ead4dcdab860c872376a08945bdd989c120e30c84dc0330540aeaafe5d6eb78ada453a40085c34cd4852fbebc0107018b05c7a66e91dcef2f7d04b3fdfdf774ec3d314c0b6dc605fbee79e02b0a173c5011d8d32b843df67f6cd72c8c4cef1022569ce0a825fa1cd8db85a3cbce03d46f02add188cf5de8e357c41b50a17e0c7c8a490c710f749a2eeab5d0353d6a14e400bc5553cbe4972dace1eee5ef45c7928d9bc5b18e9796ff9f739176d08693274d429acdb305c5c8f9b81efaa1c4ba33af88571331e7ec171768fa7dba1c6752709644db48a961926c7c46b45785
'''
Generator of subgroup of order prime q
'''
q=30353741391064615584514560147007174540536459702619846234267572733319
q=0x12039dba4456918aa12164c5b69dd909c154b5bee8c946403d7fb8587
g=23639998643791091321318158490534624029753964424304345576133619282516384428560427266185780151460131837877998430815639918534909998156332559663973427969712530820282316105167435050411162063313434513896747402918209737526485653081164026559608372522417197257815787381482300242318939791942941147295423950041972574411683224158611252323332536005444887380039756388350525139955277225676388623218517951808766353385252014949806608048372112375189648430166360848953317362055633364131235340445084174311350571275936720638484995163620716367635521772490286277228967046769627208681938004089482039529429552333580976169052424977835342137565
g=0xbb43cdefba6d5628c87379e66428e53991c782e0d8b5e2e4d41b1eb050cbade582dc5c8f92f093d694f573c16041274be6f76b69f37354251b8b7dcf6ef812211140afda6b6fcde3117ef31f519c990a9c5790662214cfd9a9fc71d13378d1146410e7c32a103989d3a584326e278819531231cbedcb8dff85e77581cbbbe84a256b48ea18a339f34388ace1582bc12131eacc7a4ea1cdf480ac4d3f3235a65b6282ca8312c08cb3a625165601b3f4550d487e763232274bc5f25f44aed364202da28a2becab405b6fda5f6eca83839088e01c5386acd55064e47d8acaadf9793ef4e5dd016558f4cb5198952a48e79dd0242dd012e80558cac18abd98eb88dd

'''
kpub_bob = g^k_bob mod p est la valeur reçue de Bob par Alice, e est l'exposant secret d'Alice

=> kpub_bob^k_alice mod p est donc la clé secrète partagée par Bob et Alice (Diffie Hellmann)
'''
kpub_bob=10881748641331206831327313889362374473196450095930856714266741902521535792894896088261641836364621152368138387171790091370728532899407341128964975335580919725190153563239440965549833833939560698392110133559122587298336436172881806607177601502821497857943545768255653386218030846884357634960145948708409013846783580226719613189772769472696186948849496250653480069869735149683063664869175811508812338947904858730397473723756795334219556733839516084428077994701774755120464497085571330029131255807180212570608844363362966090771491278764402944732291394007364799788099318712849471071218755613307002625168506814210847587031
kpub_bob=0x563336b4b732e7e4897387e03492a31e4d0c88c4b61197df4fa11276d2524762a5102f7be1fbc7b6890166e1c24e7eef0fccf0b1f12cfd143f55527247903a5783068030b0bc0de0bc051dd299ac43964afe3b13ebf7cf6f866a16829f4e24cedab4e744ae207c22f24d90c840c81931267c4ed9c8111ac50f2b8747977eae85fcfad5a30463227331b39c4f63e2fb8900445357389ae24c609bd0e386906ee4a1719cb45f6c5c933184a456ec8da72c9cf3bc3e3b09b2e9ec0489fbd276b4f079af88c5795e012d5ebc99338a6d04fea3be940908209c523a3dfdab9acaf75ff9b3781d9f6d23c6a69cf7e3d14bd45863eb03d5398e7f985bb5d74004f0bad7

'''
Algorithme de calcul : Right-to-Left-Square-and-Multiply

complexité : t carrés et en moyenne t/2 multiplications (si t est la taille de l'exposant)
'''

'''
Ratio carré/multiplication : 9/11
'''

'''
Protocole de chiffrement utilisé par Alice pour son message :

La clé échangée est stockée dans un fichier (SecretKey.dat) :
'''

c1 = squareAndMultiply(g,k,p, keyLength)
c1 = c1%(2**256)
print('key = c1 =',hex(c1))

f = open('SecretKey.dat','w')
f.write(str(hex(c1)))
f.close()

'''
La commande de chiffrement utilisée par Alice est la suivante :

openssl aes-256-cbc -e -in output.txt -out output.cph -pbkdf2 -pass file:SecretKey.dat
'''

